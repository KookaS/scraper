# create a new image with golang
FROM golang:1.18-alpine as builder
RUN apk add --no-cache git

WORKDIR /usr/tmp

# arguments from workflow
ARG MONGODB_URI
ARG SCRAPER_DB
ARG TAGS_UNWANTED_COLLECTION
ARG TAGS_WANTED_COLLECTION
ARG IMAGES_WANTED_COLLECTION
ARG IMAGES_PENDING_COLLECTION
ARG IMAGES_UNWANTED_COLLECTION
ARG USERS_UNWANTED_COLLECTION
ARG IMAGE_PATH
ARG FLICKR_PRIVATE_KEY
ARG FLICKR_PUBLIC_KEY
ARG UNSPLASH_PRIVATE_KEY
ARG UNSPLASH_PUBLIC_KEY
ARG BURST_PRIVATE_KEY
ARG BURST_PUBLIC_KEY
ARG PEXELS_PUBLIC_KEY

# env variables
ENV MONGODB_URI=$MONGODB_URI
ENV SCRAPER_DB=$SCRAPER_DB
ENV TAGS_UNWANTED_COLLECTION=$TAGS_UNWANTED_COLLECTION
ENV TAGS_WANTED_COLLECTION=$TAGS_WANTED_COLLECTION
ENV IMAGES_WANTED_COLLECTION=$IMAGES_WANTED_COLLECTION
ENV IMAGES_PENDING_COLLECTION=$IMAGES_PENDING_COLLECTION
ENV IMAGES_UNWANTED_COLLECTION=$IMAGES_UNWANTED_COLLECTION
ENV USERS_UNWANTED_COLLECTION=$USERS_UNWANTED_COLLECTION
ENV IMAGE_PATH=$IMAGE_PATH
ENV FLICKR_PRIVATE_KEY=$FLICKR_PRIVATE_KEY
ENV FLICKR_PUBLIC_KEY=$FLICKR_PUBLIC_KEY
ENV UNSPLASH_PRIVATE_KEY=$UNSPLASH_PRIVATE_KEY
ENV UNSPLASH_PUBLIC_KEY=$UNSPLASH_PUBLIC_KEY
ENV BURST_PRIVATE_KEY=$BURST_PRIVATE_KEY
ENV BURST_PUBLIC_KEY=$BURST_PUBLIC_KEY
ENV PEXELS_PUBLIC_KEY=$PEXELS_PUBLIC_KEY

# install dependencies
COPY go.mod go.sum ./
RUN go mod download && go mod verify

# build project
COPY . .
RUN go build -o scraper src/main.go

# create a new empty image
FROM alpine:latest
RUN apk --no-cache add ca-certificates

# copy the build file
COPY --from=builder /usr/tmp/scraper /usr/app/scraper
# copy the env file
COPY --from=builder /usr/tmp/.env /usr/app/.env

WORKDIR /usr/app

EXPOSE 8080

CMD ["./scraper"]